# 문제 URL : https://www.acmicpc.net/problem/11726
import sys
input = sys.stdin.readline

# n: 2×n 크기의 직사각형을 채우기 위해 필요한 방법의 수를 구할 n 입력
n = int(input())

# dp: 각 n에 대해 직사각형을 채우는 방법의 수를 저장하는 리스트
dp = [0] * (n + 1)  

# 초기 조건 설정
if n > 0:
    dp[1] = 1  # 2×1 크기의 직사각형을 채우는 방법은 1가지
if n > 1:
    dp[2] = 2  # 2×2 크기의 직사각형을 채우는 방법은 2가지 (2×1 타일 2개 or 2×2 타일 1개)

# 3부터 n까지의 값을 동적 프로그래밍으로 채움
for i in range(3, n+1):
    # dp[i-1]: 직사각형이 2×(i-1) 크기일 때 마지막에 2×1 타일을 추가하는 경우
    # dp[i-2]: 직사각형이 2×(i-2) 크기일 때 마지막에 2×2 타일을 추가하는 경우
    dp[i] = dp[i-1] + dp[i-2]

# n번째 dp 값에 대해 10007로 나눈 나머지를 출력 (문제에서 요구하는 대로 결과를 모듈러 연산)
print(dp[n] % 10007)
